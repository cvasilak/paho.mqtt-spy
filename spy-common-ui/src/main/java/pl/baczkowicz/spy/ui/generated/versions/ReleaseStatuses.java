//
// This file was generated by the Eclipse Implementation of JAXB, v2.3.7 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.07.17 at 07:56:50 PM BST 
//


package pl.baczkowicz.spy.ui.generated.versions;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.CopyStrategy2;
import org.jvnet.jaxb2_commons.lang.CopyTo2;
import org.jvnet.jaxb2_commons.lang.Equals2;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy2;
import org.jvnet.jaxb2_commons.lang.HashCode2;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy2;
import org.jvnet.jaxb2_commons.lang.JAXBCopyStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for ReleaseStatuses complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ReleaseStatuses"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="ReleaseStatus" type="{http://baczkowicz.pl/spy-versions}ReleaseStatus" maxOccurs="unbounded"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ReleaseStatuses", propOrder = {
    "releaseStatus"
})
public class ReleaseStatuses implements Cloneable, CopyTo2, Equals2, HashCode2, ToString2
{

    @XmlElement(name = "ReleaseStatus", required = true)
    protected List<ReleaseStatus> releaseStatus;

    /**
     * Gets the value of the releaseStatus property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the releaseStatus property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getReleaseStatus().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ReleaseStatus }
     * 
     * 
     */
    public List<ReleaseStatus> getReleaseStatus() {
        if (releaseStatus == null) {
            releaseStatus = new ArrayList<ReleaseStatus>();
        }
        return this.releaseStatus;
    }

    public String toString() {
        final ToStringStrategy2 strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            List<ReleaseStatus> theReleaseStatus;
            theReleaseStatus = (((this.releaseStatus!= null)&&(!this.releaseStatus.isEmpty()))?this.getReleaseStatus():null);
            strategy.appendField(locator, this, "releaseStatus", buffer, theReleaseStatus, ((this.releaseStatus!= null)&&(!this.releaseStatus.isEmpty())));
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy2 strategy) {
        if ((object == null)||(this.getClass()!= object.getClass())) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ReleaseStatuses that = ((ReleaseStatuses) object);
        {
            List<ReleaseStatus> lhsReleaseStatus;
            lhsReleaseStatus = (((this.releaseStatus!= null)&&(!this.releaseStatus.isEmpty()))?this.getReleaseStatus():null);
            List<ReleaseStatus> rhsReleaseStatus;
            rhsReleaseStatus = (((that.releaseStatus!= null)&&(!that.releaseStatus.isEmpty()))?that.getReleaseStatus():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "releaseStatus", lhsReleaseStatus), LocatorUtils.property(thatLocator, "releaseStatus", rhsReleaseStatus), lhsReleaseStatus, rhsReleaseStatus, ((this.releaseStatus!= null)&&(!this.releaseStatus.isEmpty())), ((that.releaseStatus!= null)&&(!that.releaseStatus.isEmpty())))) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy2 strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy2 strategy) {
        int currentHashCode = 1;
        {
            List<ReleaseStatus> theReleaseStatus;
            theReleaseStatus = (((this.releaseStatus!= null)&&(!this.releaseStatus.isEmpty()))?this.getReleaseStatus():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "releaseStatus", theReleaseStatus), currentHashCode, theReleaseStatus, ((this.releaseStatus!= null)&&(!this.releaseStatus.isEmpty())));
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy2 strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Object clone() {
        return copyTo(createNewInstance());
    }

    public Object copyTo(Object target) {
        final CopyStrategy2 strategy = JAXBCopyStrategy.INSTANCE;
        return copyTo(null, target, strategy);
    }

    public Object copyTo(ObjectLocator locator, Object target, CopyStrategy2 strategy) {
        final Object draftCopy = ((target == null)?createNewInstance():target);
        if (draftCopy instanceof ReleaseStatuses) {
            final ReleaseStatuses copy = ((ReleaseStatuses) draftCopy);
            {
                Boolean releaseStatusShouldBeCopiedAndSet = strategy.shouldBeCopiedAndSet(locator, ((this.releaseStatus!= null)&&(!this.releaseStatus.isEmpty())));
                if (releaseStatusShouldBeCopiedAndSet == Boolean.TRUE) {
                    List<ReleaseStatus> sourceReleaseStatus;
                    sourceReleaseStatus = (((this.releaseStatus!= null)&&(!this.releaseStatus.isEmpty()))?this.getReleaseStatus():null);
                    @SuppressWarnings("unchecked")
                    List<ReleaseStatus> copyReleaseStatus = ((List<ReleaseStatus> ) strategy.copy(LocatorUtils.property(locator, "releaseStatus", sourceReleaseStatus), sourceReleaseStatus, ((this.releaseStatus!= null)&&(!this.releaseStatus.isEmpty()))));
                    copy.releaseStatus = null;
                    if (copyReleaseStatus!= null) {
                        List<ReleaseStatus> uniqueReleaseStatusl = copy.getReleaseStatus();
                        uniqueReleaseStatusl.addAll(copyReleaseStatus);
                    }
                } else {
                    if (releaseStatusShouldBeCopiedAndSet == Boolean.FALSE) {
                        copy.releaseStatus = null;
                    }
                }
            }
        }
        return draftCopy;
    }

    public Object createNewInstance() {
        return new ReleaseStatuses();
    }

}
